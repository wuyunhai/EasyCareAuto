<?xml version="1.0" encoding="utf-8" ?>

<log4net>

  <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
    <!--过滤日志级别-->
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="INFO" />
    </filter>
    <!--1.1 文件夹的位置（也可以写相对路径）-->
    <!--<param name="File"  value="E:\DAService\Log\" />-->
    <!--相对路径-->
    <param name="File"  value="Logs/" />
    <!--1.2 是否追加到文件-->
    <param name="AppendToFile" value="true" />
    <!--1.3 使用最小锁定模型（minimal locking model），以允许多个进程可以写入同一个文件 -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <!--1.4 配置Unicode编码-->
    <Encoding value="UTF-8" />
    <!--1.5 是否只写到一个文件里-->
    <param name="StaticLogFileName" value="false" />
    <!--1.6 配置按照何种方式产生多个日志文件 （Date：日期、Size：文件大小、Composite：日期和文件大小的混合方式）-->
    <param name="RollingStyle" value="Composite" />
    <!--1.7 介绍多种日志的的命名和存放在磁盘的形式-->
    <!--1.7.1 在根目录下直接以日期命名txt文件 注意&quot;的位置,去空格 -->
    <param name="DatePattern" value="&quot;Data_&quot;yyyy-MM-dd&quot;.log&quot;" />
    <!--1.7.2 在根目录下按日期产生文件夹，文件名固定 test.log  -->
    <!--<param name="DatePattern" value="yyyy-MM-dd/&quot;test.log&quot;"  />-->
    <!--1.7.3 在根目录下按日期产生文件夹，这是按日期产生文件夹，并在文件名前也加上日期  -->
    <!--<param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;-test.log&quot;"  />-->
    <!--1.7.4 在根目录下按日期产生文件夹，这再形成下一级固定的文件夹  -->
    <!--<param name="DatePattern" value="yyyyMMdd/&quot;OrderInfor/test.log&quot;"  />-->
    <!--1.8 配置每个日志的大小。【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志，
      超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。-->
    <param name="maximumFileSize" value="20MB" />
    <!--1.9 最多产生的日志文件个数，超过则保留最新的n个 将value的值设置-1，则不限文件个数 【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】
        与1.8中maximumFileSize文件大小是配合使用的-->
    <param name="MaxSizeRollBackups" value="10" />
    <!--1.10 配置文件文件的布局格式，使用PatternLayout，自定义布局-->
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%[%date%] %-5level%>> %message%newline" />
    </layout>
  </appender>
  <appender name="debugAppender" type="log4net.Appender.RollingFileAppender">
    <!--过滤日志级别-->
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="DEBUG" />
      <param name="LevelMax" value="DEBUG" /> 
    </filter>
    <!--1.1 文件夹的位置（也可以写相对路径）-->
    <!--<param name="File"  value="E:\DAService\Log\" />-->
    <!--相对路径-->
    <param name="File"  value="Logs/" />
    <!--1.2 是否追加到文件-->
    <param name="AppendToFile" value="true" />
    <!--1.3 使用最小锁定模型（minimal locking model），以允许多个进程可以写入同一个文件 -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <!--1.4 配置Unicode编码-->
    <Encoding value="UTF-8" />
    <!--1.5 是否只写到一个文件里-->
    <param name="StaticLogFileName" value="false" />
    <!--1.6 配置按照何种方式产生多个日志文件 （Date：日期、Size：文件大小、Composite：日期和文件大小的混合方式）-->
    <param name="RollingStyle" value="Composite" />
    <!--1.7 介绍多种日志的的命名和存放在磁盘的形式-->
    <!--1.7.1 在根目录下直接以日期命名txt文件 注意&quot;的位置,去空格 -->
    <param name="DatePattern" value="&quot;Heart_&quot;yyyy-MM-dd&quot;.log&quot;" />
    <!--1.7.2 在根目录下按日期产生文件夹，文件名固定 test.log  -->
    <!--<param name="DatePattern" value="yyyy-MM-dd/&quot;test.log&quot;"  />-->
    <!--1.7.3 在根目录下按日期产生文件夹，这是按日期产生文件夹，并在文件名前也加上日期  -->
    <!--<param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;-test.log&quot;"  />-->
    <!--1.7.4 在根目录下按日期产生文件夹，这再形成下一级固定的文件夹  -->
    <!--<param name="DatePattern" value="yyyyMMdd/&quot;OrderInfor/test.log&quot;"  />-->
    <!--1.8 配置每个日志的大小。【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志，
      超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。-->
    <param name="maximumFileSize" value="20MB" />
    <!--1.9 最多产生的日志文件个数，超过则保留最新的n个 将value的值设置-1，则不限文件个数 【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】
        与1.8中maximumFileSize文件大小是配合使用的-->
    <param name="MaxSizeRollBackups" value="10" />
    <!--1.10 配置文件文件的布局格式，使用PatternLayout，自定义布局-->
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%[%date%] %-5level%>> %message%newline" />
    </layout>
  </appender>
  <root>
    <level value="ALL" />
    <!--<appender-ref ref="errorAppender" />-->
    <appender-ref ref="RollingFileAppender" />
    <appender-ref ref="debugAppender" />
  </root>
  <!--<logger name="Performance" additivity="false">
    <level value="ALL" />
    <appender-ref ref="perfAppender" />
  </logger>-->
</log4net>